<?php

/**
 * This is the model base class for the table "c_group_description".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "CGroupDescription".
 *
 * Columns in table "c_group_description" available as properties of the model,
 * followed by relations of table "c_group_description" available as properties of the model.
 *
 * @property integer $c_group_id
 * @property integer $locale_code
 * @property string $name
 * @property string $description
 *
 * @property CGroup $cGroup
 */
abstract class BaseCGroupDescription extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'c_group_description';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'Cgroup Description|Cgroup Descriptions', $n);
	}

	public static function representingColumn() {
		return 'name';
	}

	public function rules() {
		return array(
			array('c_group_id, locale_code, name, description', 'required'),
			array('c_group_id', 'numerical', 'integerOnly'=>true),
			array('locale_code', 'length', 'max'=>5),
			array('name', 'length', 'max'=>32),
			array('c_group_id, locale_code, name, description', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		$localeCode = Yii::app()->getLanguage(); 

		return array(
			'cGroup' => array(self::BELONGS_TO, 'CGroup', 'c_group_id'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'c_group_id' => null,
			'locale_code' => Yii::t('label', 'Locale Code'),
			'name' => Yii::t('label', 'Name'),
			'description' => Yii::t('label', 'Description'),
			'cGroup' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('c_group_id', $this->c_group_id);
		$criteria->compare('locale_code', $this->locale_code);
		$criteria->compare('name', $this->name, true);
		$criteria->compare('description', $this->description, true);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}